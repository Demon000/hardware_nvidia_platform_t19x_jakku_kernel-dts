/*
 * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include <dt-bindings/media/camera.h>

#define GMSL_CAMERA_NUM	3
#define GMSL_CAMERA_1
#if (GMSL_CAMERA_NUM >= 2)
#define GMSL_CAMERA_2
#endif
#if (GMSL_CAMERA_NUM >= 3)
#define GMSL_CAMERA_3
#endif
#define GMSL_VC
#define GMSL_PHY 0x2

/ {
	tegra-capture-vi  {
		num-channels = <GMSL_CAMERA_NUM>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;

				vi_in0: endpoint {
#if defined(GMSL_VC)
					vc-id = <0>;
#endif
					port-index = <0>;
					bus-width = <2>;
					remote-endpoint = <&csi_out0>;
				};
			};

#if defined(GMSL_CAMERA_2)
			port@1 {
				reg = <1>;

				vi_in1: endpoint {
#if defined(GMSL_VC)
					vc-id = <1>;
#endif
					port-index = <0>;
					bus-width = <2>;
					remote-endpoint = <&csi_out1>;
				};
			};
#endif

#if defined(GMSL_CAMERA_3)
			port@2 {
				reg = <2>;

				vi_in2: endpoint {
#if defined(GMSL_VC)
					vc-id = <2>;
#endif
					port-index = <0>;
					bus-width = <2>;
					remote-endpoint = <&csi_out2>;
				};
			};
#endif
		};
	};

	host1x@13e00000 {
		nvcsi@15a00000 {
			num-channels = <GMSL_CAMERA_NUM>;

			#address-cells = <1>;
			#size-cells = <0>;

			channel@0 {
				reg = <0>;

				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;

						csi_in0: endpoint@0 {
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&max96712_out0>;
						};
					};

					port@1 {
						reg = <1>;

						csi_out0: endpoint@1 {
							remote-endpoint = <&vi_in0>;
						};
					};
				};
			};

#if defined(GMSL_CAMERA_2)
			channel@1 {
				reg = <1>;

				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;

						csi_in1: endpoint@2 {
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&max96712_out1>;
						};
					};

					port@1 {
						reg = <1>;

						csi_out1: endpoint@3 {
							remote-endpoint = <&vi_in1>;
						};
					};
				};
			};
#endif

#if defined(GMSL_CAMERA_3)
			channel@2 {
				reg = <2>;

				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;

						csi_in2: endpoint@4 {
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&max96712_out2>;
						};
					};

					port@1 {
						reg = <1>;

						csi_out2: endpoint@5 {
							remote-endpoint = <&vi_in2>;
						};
					};
				};
			};
#endif
		};
	};

	i2c@c240000 {
			gmsl-deserializer@27 {
				compatible = "maxim,max96712";
				reg = <0x27>;

				i2c-mux {
					i2c@0 {
						reg = <0>;

						gmsl-serializer@40 {
							compatible = "maxim,max96717";
							reg = <0x40>;

							max,pixel-mode;

							channel@1 {
								reg = <1>;

								nv,skip-s-stream;
								nv,skip-notifier;
								nv,skip-link;

								ports {
									#address-cells = <1>;
									#size-cells = <0>;

									port@0 {
										reg = <0>;

										max96717_out0: endpoint {
											remote-endpoint = <&max96712_in0>;
											port-index = <0>;
										};
									};

									port@1 {
										reg = <1>;

										max96717_in0: endpoint {
											remote-endpoint = <&ox03a_out0>;
										};
									};
								};
							};
						};

						#define OX03A_VC_ID 0
						#define OX03A_OUT_LABEL ox03a_out0
						#define OX03A_IN_LABEL max96717_in0
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};

#if defined(GMSL_CAMERA_2)
					i2c@1 {
						reg = <1>;

						gmsl-serializer@40 {
							compatible = "maxim,max96717";
							reg = <0x40>;

							max,pixel-mode;

							channel@1 {
								reg = <1>;

								nv,skip-s-stream;
								nv,skip-notifier;
								nv,skip-link;

								ports {
									#address-cells = <1>;
									#size-cells = <0>;

									port@0 {
										reg = <0>;

										max96717_out1: endpoint {
											remote-endpoint = <&max96712_in1>;
											port-index = <0>;
										};
									};

									port@1 {
										reg = <1>;

										max96717_in1: endpoint {
											remote-endpoint = <&ox03a_out1>;
										};
									};
								};
							};
						};

						#define OX03A_VC_ID 1
						#define OX03A_OUT_LABEL ox03a_out1
						#define OX03A_IN_LABEL max96717_in1
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};
#endif

#if defined(GMSL_CAMERA_3)
					i2c@2 {
						reg = <2>;

						gmsl-serializer@40 {
							compatible = "maxim,max96717";
							reg = <0x40>;

							max,pixel-mode;

							channel@1 {
								reg = <1>;

								nv,skip-s-stream;
								nv,skip-notifier;
								nv,skip-link;

								ports {
									#address-cells = <1>;
									#size-cells = <0>;

									port@0 {
										reg = <0>;

										max96717_out2: endpoint {
											remote-endpoint = <&max96712_in2>;
											port-index = <0>;
										};
									};

									port@1 {
										reg = <1>;

										max96717_in2: endpoint {
											remote-endpoint = <&ox03a_out2>;
										};
									};
								};
							};
						};

						#define OX03A_VC_ID 2
						#define OX03A_OUT_LABEL ox03a_out2
						#define OX03A_IN_LABEL max96717_in2
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};
#endif
				};

				channel@0 {
					reg = <0>;

					max,dest-phy = <GMSL_PHY>;
					max,dt-vc-phy-remap =
						<0x2c 0x00 0x2c 0x00 GMSL_PHY>,
						<0x00 0x00 0x00 0x00 GMSL_PHY>,
						<0x01 0x00 0x01 0x00 GMSL_PHY>;

					nv,subdev-for-calls;

					ports {
						#address-cells = <1>;
						#size-cells = <0>;

						port@0 {
							reg = <0>;

							max96712_out0: endpoint {
								remote-endpoint = <&csi_in0>;
								port-index = <0>;
								clock-lanes = <0>;
								data-lanes = <1 2>;
								clock-noncontinuous;
							};
						};

						port@1 {
							reg = <1>;

							max96712_in0: endpoint {
								remote-endpoint = <&max96717_out0>;
							};
						};
					};
				};

#if defined(GMSL_CAMERA_2)
				channel@1 {
					reg = <1>;

					max,dest-phy = <GMSL_PHY>;
					max,dt-vc-phy-remap =
						<0x2c 0x00 0x2c 0x01 GMSL_PHY>,
						<0x00 0x00 0x00 0x01 GMSL_PHY>,
						<0x01 0x00 0x01 0x01 GMSL_PHY>;

					nv,subdev-for-calls;

					ports {
						#address-cells = <1>;
						#size-cells = <0>;

						port@0 {
							reg = <0>;

							max96712_out1: endpoint {
								remote-endpoint = <&csi_in1>;
								port-index = <0>;
								clock-lanes = <0>;
								data-lanes = <1 2>;
								clock-noncontinuous;
							};
						};

						port@1 {
							reg = <1>;

							max96712_in1: endpoint {
								remote-endpoint = <&max96717_out1>;
							};
						};
					};
				};
#endif

#if defined(GMSL_CAMERA_3)
				channel@2 {
					reg = <2>;

					max,dest-phy = <GMSL_PHY>;
					max,dt-vc-phy-remap =
						<0x2c 0x00 0x2c 0x02 GMSL_PHY>,
						<0x00 0x00 0x00 0x02 GMSL_PHY>,
						<0x01 0x00 0x01 0x02 GMSL_PHY>;

					nv,subdev-for-calls;

					ports {
						#address-cells = <1>;
						#size-cells = <0>;

						port@0 {
							reg = <0>;

							max96712_out2: endpoint {
								remote-endpoint = <&csi_in2>;
								port-index = <0>;
								clock-lanes = <0>;
								data-lanes = <1 2>;
								clock-noncontinuous;
							};
						};

						port@1 {
							reg = <1>;

							max96712_in2: endpoint {
								remote-endpoint = <&max96717_out2>;
							};
						};
					};
				};
#endif
			};
	};
};
/ {
	tcp: tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		* max_pixel_rate = <>;
		* Max pixel rate in Kpixel/s for the ISP ISO case
		*
		* isp_peak_byte_per_pixel = <>;
		* Max byte per pixel for the ISP ISO case
		*
		* isp_bw_margin_pct = <>;
		* Isp bandwidth margin in percentage
		*/
		num_csi_lanes = <2>;
		max_lane_speed = <4000000>;
		min_bits_per_pixel = <10>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <25>;
		max_pixel_rate = <240000>;
		isp_peak_byte_per_pixel = <5>;
		isp_bw_margin_pct = <25>;

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. "rear" or "front".
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vendor.
		 */
		modules {
			module0 {
				badge = "cam0";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 9-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@0/ox03a@36";
				};
			};

#if defined(GMSL_CAMERA_2)
			module1 {
				badge = "cam1";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 10-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@1/ox03a@36";
				};
			};
#endif

#if defined(GMSL_CAMERA_3)
			module2 {
				badge = "cam2";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 11-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@2/ox03a@36";
				};
			};
#endif
		};
	};
};
