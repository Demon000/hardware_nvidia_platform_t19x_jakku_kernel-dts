/*
 * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include <dt-bindings/media/camera.h>

#define _CONCAT(a, b) a ## b
#define CONCAT(a, b) _CONCAT(a, b)

#define _STRINGIFY(a) # a
#define STRINGIFY(a) _STRINGIFY(a)

#define GMSL_CAMERA_NUM	3
#define GMSL_CAMERA_1
#if (GMSL_CAMERA_NUM >= 2)
#define GMSL_CAMERA_2
#endif
#if (GMSL_CAMERA_NUM >= 3)
#define GMSL_CAMERA_3
#endif
#if (GMSL_CAMERA_NUM >= 4)
#define GMSL_CAMERA_4
#endif
#define GMSL_VC
#define GMSL_PHY 0x2
#define GMSL_PORT	0x0
#define GMSL_MIPI_DT 0x2c
#define GMSL_MIPI_DT_FS 0x0
#define GMSL_MIPI_DT_FE 0x1

#define GMSL_CHANGE_I2C_ADDR
#define GMSL_SER_0_MAX9295A
#define GMSL_SER_1_MAX9295A

/ {
	tegra-capture-vi  {
		num-channels = <GMSL_CAMERA_NUM>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;

				vi_in0: endpoint {
#if defined(GMSL_VC)
					vc-id = <0>;
#endif
					port-index = <GMSL_PORT>;
					bus-width = <2>;
					remote-endpoint = <&csi_out0>;
				};
			};

#if defined(GMSL_CAMERA_2)
			port@1 {
				reg = <1>;

				vi_in1: endpoint {
#if defined(GMSL_VC)
					vc-id = <1>;
#endif
					port-index = <GMSL_PORT>;
					bus-width = <2>;
					remote-endpoint = <&csi_out1>;
				};
			};
#endif

#if defined(GMSL_CAMERA_3)
			port@2 {
				reg = <2>;

				vi_in2: endpoint {
#if defined(GMSL_VC)
					vc-id = <2>;
#endif
					port-index = <GMSL_PORT>;
					bus-width = <2>;
					remote-endpoint = <&csi_out2>;
				};
			};
#endif

#if defined(GMSL_CAMERA_4)
			port@3 {
				reg = <3>;

				vi_in3: endpoint {
#if defined(GMSL_VC)
					vc-id = <3>;
#endif
					port-index = <GMSL_PORT>;
					bus-width = <2>;
					remote-endpoint = <&csi_out3>;
				};
			};
#endif
		};
	};

	host1x@13e00000 {
		nvcsi@15a00000 {
			num-channels = <GMSL_CAMERA_NUM>;

			#address-cells = <1>;
			#size-cells = <0>;

			#define NVCSI_CH_INDEX 0
			#include "tegra194-camera-gmsl-nvcsi-channel.dtsi"

#if defined(GMSL_CAMERA_2)
			#define NVCSI_CH_INDEX 1
			#include "tegra194-camera-gmsl-nvcsi-channel.dtsi"
#endif

#if defined(GMSL_CAMERA_3)
			#define NVCSI_CH_INDEX 2
			#include "tegra194-camera-gmsl-nvcsi-channel.dtsi"
#endif

#if defined(GMSL_CAMERA_4)
			#define NVCSI_CH_INDEX 3
			#include "tegra194-camera-gmsl-nvcsi-channel.dtsi"
#endif
		};
	};

	i2c@c240000 {
			gmsl-deserializer@27 {
				compatible = "maxim,max96724";
				reg = <0x27>;

				i2c-mux {
					i2c@0 {
						reg = <0>;

						#define SER_INDEX 0
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define SER_HEX_REG 0x41
						#endif
						#ifdef GMSL_SER_0_MAX9295A
						#define SER_COMPAT "maxim,max9295a"
						#endif
						#include "tegra194-camera-gmsl-serializer.dtsi"

						#define OX03A_INDEX 0
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define OX03A_HEX_REG 0x37
						#endif
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};

#if defined(GMSL_CAMERA_2)
					i2c@1 {
						reg = <1>;

						#define SER_INDEX 1
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define SER_HEX_REG 0x42
						#endif
						#ifdef GMSL_SER_1_MAX9295A
						#define SER_COMPAT "maxim,max9295a"
						#endif
						#include "tegra194-camera-gmsl-serializer.dtsi"

						#define OX03A_INDEX 1
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define OX03A_HEX_REG 0x38
						#endif
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};
#endif

#if defined(GMSL_CAMERA_3)
					i2c@2 {
						reg = <2>;

						#define SER_INDEX 2
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define SER_HEX_REG 0x43
						#endif
						#include "tegra194-camera-gmsl-serializer.dtsi"

						#define OX03A_INDEX 2
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define OX03A_HEX_REG 0x39
						#endif
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};
#endif

#if defined(GMSL_CAMERA_4)
					i2c@3 {
						reg = <3>;

						#define SER_INDEX 3
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define SER_HEX_REG 0x44
						#endif
						#include "tegra194-camera-gmsl-serializer.dtsi"

						#define OX03A_INDEX 3
						#ifdef GMSL_CHANGE_I2C_ADDR
						#define OX03A_HEX_REG 0x3a
						#endif
						#include "tegra194-camera-gmsl-ox03a.dtsi"
					};
#endif
				};

				#define DESER_CH_INDEX 0
				#ifdef GMSL_CHANGE_I2C_ADDR
				#define DESER_CH_SRC_SER_REG 0x40
				#define DESER_CH_DST_SER_REG 0x41
				#define DESER_CH_SRC_I2C_REG 0x36
				#define DESER_CH_DST_I2C_REG 0x37
				#endif
				#include "tegra194-camera-gmsl-deserializer-channel.dtsi"

#if defined(GMSL_CAMERA_2)
				#define DESER_CH_INDEX 1
				#ifdef GMSL_CHANGE_I2C_ADDR
				#define DESER_CH_SRC_SER_REG 0x40
				#define DESER_CH_DST_SER_REG 0x42
				#define DESER_CH_SRC_I2C_REG 0x36
				#define DESER_CH_DST_I2C_REG 0x38
				#endif
				#include "tegra194-camera-gmsl-deserializer-channel.dtsi"
#endif

#if defined(GMSL_CAMERA_3)
				#define DESER_CH_INDEX 2
				#ifdef GMSL_CHANGE_I2C_ADDR
				#define DESER_CH_SRC_SER_REG 0x40
				#define DESER_CH_DST_SER_REG 0x43
				#define DESER_CH_SRC_I2C_REG 0x36
				#define DESER_CH_DST_I2C_REG 0x39
				#endif
				#include "tegra194-camera-gmsl-deserializer-channel.dtsi"
#endif

#if defined(GMSL_CAMERA_4)
				#define DESER_CH_INDEX 3
				#ifdef GMSL_CHANGE_I2C_ADDR
				#define DESER_CH_SRC_SER_REG 0x40
				#define DESER_CH_DST_SER_REG 0x44
				#define DESER_CH_SRC_I2C_REG 0x36
				#define DESER_CH_DST_I2C_REG 0x3a
				#endif
				#include "tegra194-camera-gmsl-deserializer-channel.dtsi"
#endif
			};
	};
};
/ {
	tcp: tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		* max_pixel_rate = <>;
		* Max pixel rate in Kpixel/s for the ISP ISO case
		*
		* isp_peak_byte_per_pixel = <>;
		* Max byte per pixel for the ISP ISO case
		*
		* isp_bw_margin_pct = <>;
		* Isp bandwidth margin in percentage
		*/
		num_csi_lanes = <2>;
		max_lane_speed = <4000000>;
		min_bits_per_pixel = <10>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <25>;
		max_pixel_rate = <240000>;
		isp_peak_byte_per_pixel = <5>;
		isp_bw_margin_pct = <25>;

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. "rear" or "front".
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vendor.
		 */
		modules {
			module0 {
				badge = "jakku_front_ox03a1";
				position = "topleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 9-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@0/ox03a@36";
				};
			};

#if defined(GMSL_CAMERA_2)
			module1 {
				badge = "jakku_front_ox03a2";
				position = "topright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 10-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@1/ox03a@36";
				};
			};
#endif

#if defined(GMSL_CAMERA_3)
			module2 {
				badge = "jakku_front_ox03a3";
				position = "bottomleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 11-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@2/ox03a@36";
				};
			};
#endif

#if defined(GMSL_CAMERA_4)
			module3 {
				badge = "jakku_front_ox03a4";
				position = "bottomright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ox03a 12-0036";
					proc-device-tree = "/proc/device-tree/i2c@c240000/gmsl-deserializer@27/i2c-mux/i2c@3/ox03a@36";
				};
			};
#endif
		};
	};
};

#undef STRINGIFY
#undef _STRINGIFY

#undef CONCAT
#undef _CONCAT
